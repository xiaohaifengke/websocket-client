{"version":3,"sources":["../src/index.js"],"names":["Heartbeat","isPromise","getTime","defaultOptions","connectImmediately","defaultEventHandler","connectLogSilent","eventLogSilent","maxReconnectTimes","reconnectTimeInterval","immediateReconnectTimeInterval","heartbeatPeriod","heartbeatMessage","heartbeatLogSilent","WebSocketClient","constructor","url","options","$options","wasClean","reconnectTimes","_messageCache","createWebSocket","heartbeat","message","period","_init","window","readyState","undefined","WebSocket","CLOSED","ws","initEventsHandler","alert","reconnectWebSocket","times","interval","console","log","setTimeout","t","error","addEventListener","recheck","sendCachedMessage","event","data","JSON","parse","trigger","stopCheck","cacheMessage","index","indexOf","push","length","msg","shift","send","CONNECTING","OPEN","splice","stringify","close","Object","defineProperties","enumerable","get","status","STATUS","onopen","set","fn","onmessage","onclose","onerror","on","func","_events","create","Array","isArray","i","l","once","$this","off","apply","arguments","cbs","cb","res","args","_handled","catch","e","EventHub"],"mappings":"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","sourcesContent":["import { Heartbeat } from './heartbeat'\r\nimport { isPromise, getTime } from './util'\r\n\r\nconst defaultOptions = {\r\n    connectImmediately: true,\r\n    defaultEventHandler: true,\r\n    connectLogSilent: false,\r\n    eventLogSilent: false,\r\n    maxReconnectTimes: 3,\r\n    reconnectTimeInterval: 30000,\r\n    immediateReconnectTimeInterval: 2000,\r\n    heartbeatPeriod: 50000,\r\n    heartbeatMessage: 'ping',\r\n    heartbeatLogSilent: false\r\n}\r\n\r\nexport class WebSocketClient {\r\n    // eslint-disable-next-line\r\n    static STATUS = ['CONNECTING', 'OPEN', 'CLOSING', 'CLOSED']\r\n\r\n    /**\r\n     * WebSocketClient constructor\r\n     * @param { number }  heartbeatPeriod    心跳周期(ms)                              default: 50000\r\n     * @param { boolean}  connectImmediately WebSocketClient实例化后是否立即连接服务端    default: false\r\n     * @param { string | object }  heartbeatMessage   心跳检测时向服务端发送的消息        default: 'ping'\r\n     */\r\n    constructor (url, options = {}) {\r\n        this.url = url\r\n        this.options = options\r\n        this.defaultOptions = { ...defaultOptions }\r\n        this.$options = { ...this.defaultOptions, ...options }\r\n        this.wasClean = null // Boolean. 是否正常断开。一般异常断开时，该值为false\r\n        this.reconnectTimes = 0 // 第n次重连的flag\r\n        this._messageCache = []\r\n        if (this.$options.connectImmediately) this.createWebSocket(url)\r\n        this.heartbeat = new Heartbeat(this, {\r\n            message: this.$options.heartbeatMessage,\r\n            period: this.$options.heartbeatPeriod\r\n        })\r\n        this._init()\r\n    }\r\n\r\n    createWebSocket () {\r\n        if ('WebSocket' in window) {\r\n            if (this.readyState === undefined || this.readyState === WebSocket.CLOSED) {\r\n                this.ws = new WebSocket(this.url)\r\n                if (this.$options.defaultEventHandler) this.initEventsHandler()\r\n            }\r\n        } else {\r\n            alert('WebSocket is not supported in your browser!')\r\n        }\r\n    }\r\n\r\n    reconnectWebSocket (times = 0, interval = this.defaultOptions.reconnectTimeInterval) {\r\n        if (times < this.$options.maxReconnectTimes) {\r\n            if (!this.$options.connectLogSilent) {\r\n                console.log(`Try to reconnect the WebSocket after ${interval / 1000} seconds.`)\r\n            }\r\n            setTimeout((t) => {\r\n                if (!this.$options.connectLogSilent) {\r\n                    console.log(`${t + 1}th attempt to reconnect to webSocket server.`)\r\n                }\r\n                this.reconnectTimes++\r\n                this.createWebSocket()\r\n            }, interval, times)\r\n        } else {\r\n            if (!this.$options.connectLogSilent) {\r\n                console.error(`Could not create connection to websocket server. Attempted reconnect ${this.$options.maxReconnectTimes} times. Giving up!`)\r\n            }\r\n        }\r\n    }\r\n\r\n    initEventsHandler () {\r\n        this.ws.addEventListener('open', () => {\r\n            if (!this.$options.eventLogSilent) {\r\n                console.log(`The Websocket has opened at ${getTime()}.`)\r\n            }\r\n            this.wasClean = null\r\n            this.reconnectTimes = 0 // 重连后重置\r\n            this.heartbeat.recheck() // 心跳检测\r\n            this.sendCachedMessage()\r\n        })\r\n        this.ws.addEventListener('message', (event) => {\r\n            this.heartbeat.recheck() // 心跳检测\r\n            const data = JSON.parse(event.data)\r\n            this.trigger(data.message, data)\r\n        })\r\n        this.ws.addEventListener('close', (event) => {\r\n            this.wasClean = !!event.wasClean\r\n            if (this.wasClean) {\r\n                if (!this.$options.eventLogSilent) {\r\n                    console.log(`The WebSocket connection has been closed normally at ${getTime()}.`, event)\r\n                }\r\n            } else {\r\n                if (!this.$options.eventLogSilent) {\r\n                    console.error(`closed at ${getTime()}.`, event)\r\n                }\r\n                this.reconnectWebSocket(this.reconnectTimes,\r\n                    this.reconnectTimes > 0 ? this.$options.reconnectTimeInterval : this.$options.immediateReconnectTimeInterval)\r\n            }\r\n            this.heartbeat.stopCheck() // 关闭后停止心跳检测\r\n        })\r\n        this.ws.addEventListener('error', (error) => {\r\n            if (!this.$options.eventLogSilent) {\r\n                console.error(`The WebSocket connection has been closed due to an error at ${getTime()}.`, error)\r\n            }\r\n        })\r\n    }\r\n\r\n    cacheMessage (message) {\r\n        const index = this._messageCache.indexOf(message)\r\n        if (index === -1) {\r\n            this._messageCache.push(message)\r\n        }\r\n    }\r\n\r\n    sendCachedMessage () {\r\n        if (this._messageCache.length === 0) return\r\n        const msg = this._messageCache.shift()\r\n        this.send(msg)\r\n        setTimeout(() => {\r\n            this.sendCachedMessage()\r\n        }, 100)\r\n    }\r\n\r\n    /**\r\n     * 1. 判断当前websocket的连接状态为OPEN状态时发送消息\r\n     * 2. TODO: 当非OPEN状态时，判断是否为正常断开。只有当websocket为异常断开时，才存储信息\r\n     * @param { object } message\r\n     */\r\n    send (message) {\r\n        switch (this.readyState) {\r\n            case undefined: {\r\n\r\n                /**\r\n                 * WebSocket is not instantiated. Store the message to the messageCache\r\n                 * and send it after the WebSocket open. Then invoke the createWebSocket method.\r\n                 *\r\n                 */\r\n                if (message !== this.$options.heartbeatMessage) {\r\n                    this.cacheMessage(message)\r\n                }\r\n                this.createWebSocket()\r\n                break\r\n            }\r\n            case WebSocket.CONNECTING: {\r\n\r\n                /**\r\n                 * WebSocket is connecting. Store the message to the messageCache\r\n                 * and send it after the WebSocket open.\r\n                 *\r\n                 */\r\n                if (message !== this.$options.heartbeatMessage) {\r\n                    this.cacheMessage(message)\r\n                }\r\n                break\r\n            }\r\n\r\n\r\n            case WebSocket.OPEN: { // WebSocket is connected and send the message directly.\r\n                if (message === this.$options.heartbeatMessage) {\r\n                    console.log(`Heartbeat check at ${getTime()}.`)\r\n                    break\r\n                }\r\n\r\n                const index = this._messageCache.indexOf(message)\r\n                if (index !== -1) { // 如果该msg在messageCache内，则从messageCache中删除该msg\r\n                    this._messageCache.splice(index, 1)\r\n                }\r\n                this.ws.send(JSON.stringify(message))\r\n                break\r\n            }\r\n            default: {\r\n\r\n                /**\r\n                 * TODO: Do not store the message if this.wasClean is true\r\n                 * Store the message to the messageCache\r\n                 * and send it after the WebSocket is reconnected.\r\n                 */\r\n                if (message !== this.$options.heartbeatMessage) {\r\n                    this.cacheMessage(message)\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    close () {\r\n        this.ws?.close()\r\n    }\r\n\r\n    _init () {\r\n        Object.defineProperties(this, {\r\n            readyState: {\r\n                enumerable: true,\r\n                get: function () {\r\n                    return this.ws?.readyState\r\n                }\r\n            },\r\n            status: {\r\n                enumerable: true,\r\n                get: function () {\r\n                    return this.readyState >= 0 ? this.constructor.STATUS[this.readyState] : 'UNCREATE'\r\n                }\r\n            },\r\n            onopen: {\r\n                enumerable: true,\r\n                get: function () {\r\n                    return this.ws?.onopen\r\n                },\r\n                set: function (fn) {\r\n                    this.ws && (this.ws.onopen = fn)\r\n                }\r\n            },\r\n            onmessage: {\r\n                enumerable: true,\r\n                get: function () {\r\n                    return this.ws?.onmessage\r\n                },\r\n                set: function (fn) {\r\n                    this.ws && (this.ws.onmessage = fn)\r\n                }\r\n            },\r\n            onclose: {\r\n                enumerable: true,\r\n                get: function () {\r\n                    return this.ws?.onclose\r\n                },\r\n                set: function (fn) {\r\n                    this.ws && (this.ws.onclose = fn)\r\n                }\r\n            },\r\n            onerror: {\r\n                enumerable: true,\r\n                get: function () {\r\n                    return this.ws?.onerror\r\n                },\r\n                set: function (fn) {\r\n                    this.ws && (this.ws.onerror = fn)\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    on (event, func) {\r\n        if (!this._events) this._events = Object.create(null)\r\n        if (Array.isArray(event)) {\r\n            for (let i = 0, l = event.length; i < l; i++) {\r\n                this.on(event[i], func)\r\n            }\r\n        } else {\r\n            (this._events[event] || (this._events[event] = [])).push(func)\r\n        }\r\n        return this\r\n    }\r\n\r\n    once (event, func) {\r\n        const $this = this\r\n\r\n        function once () {\r\n            $this.off(event, once)\r\n            func.apply($this, arguments)\r\n        }\r\n\r\n        once.func = func\r\n        this.on(event, once)\r\n        return this\r\n    }\r\n\r\n    off (event, func) {\r\n        // all\r\n        if (!arguments.length) {\r\n            this._events = Object.create(null)\r\n            return this\r\n        }\r\n        // array of events\r\n        if (Array.isArray(event)) {\r\n            for (let i = 0, l = event.length; i < l; i++) {\r\n                this.off(event[i], func)\r\n            }\r\n            return this\r\n        }\r\n        // specific event\r\n        const cbs = this._events[event]\r\n        if (!cbs) {\r\n            return this\r\n        }\r\n        if (!func) {\r\n            this._events[event] = null\r\n            return this\r\n        }\r\n        // specific handler\r\n        let cb\r\n        let i = cbs.length\r\n        while (i--) {\r\n            cb = cbs[i]\r\n            if (cb === func || cb.func === func) {\r\n                cbs.splice(i, 1)\r\n                break\r\n            }\r\n        }\r\n        return this\r\n    }\r\n\r\n    trigger (event, ...args) {\r\n        let cbs = this._events[event]\r\n        if (cbs) {\r\n            cbs = [...cbs]\r\n            let res\r\n            for (let i = 0, l = cbs.length; i < l; i++) {\r\n                try {\r\n                    res = cbs[i].apply(this, args)\r\n                    if (res && isPromise(res) && !res._handled) {\r\n                        res.catch(e => console.error(e))\r\n                        res._handled = true\r\n                    }\r\n                } catch (e) {\r\n                    console.error(e)\r\n                }\r\n            }\r\n        }\r\n        return this\r\n    }\r\n}\r\n\r\nexport { EventHub } from './util'\r\nexport { Heartbeat } from './heartbeat'\r\nexport default WebSocketClient"],"file":"index.js"}