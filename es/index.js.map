{"version":3,"sources":["../src/index.js"],"names":["Heartbeat","isPromise","getTime","isArrayBufferView","isPlainObject","defaultOptions","connectImmediately","enableDefaultEventHandler","connectLogSilent","eventLogSilent","maxReconnectTimes","reconnectTimeInterval","immediateReconnectTimeInterval","enableMessageCache","message","heartbeatPeriod","heartbeatMessage","heartbeatLogSilent","WebSocketClient","url","options","$options","wasClean","reconnectTimes","_messageCache","createWebSocket","heartbeat","period","_init","window","readyState","undefined","WebSocket","CLOSED","ws","initEventsHandler","console","log","times","interval","setTimeout","t","error","addEventListener","recheck","sendCachedMessage","event","data","JSON","parse","eventName","trigger","reconnectWebSocket","stopCheck","index","indexOf","push","length","msg","shift","send","cacheMessage","CONNECTING","OPEN","stringify","splice","Blob","ArrayBuffer","args","close","Object","defineProperties","enumerable","get","status","constructor","STATUS","onopen","set","fn","onmessage","onclose","onerror","func","_events","create","Array","isArray","i","l","on","$this","once","off","apply","arguments","cbs","cb","res","_handled","catch","e","EventHub"],"mappings":"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","sourcesContent":["import { Heartbeat } from './heartbeat'\nimport { isPromise, getTime, isArrayBufferView, isPlainObject } from './util'\n\nconst defaultOptions = {\n  connectImmediately: true,\n  enableDefaultEventHandler: true,\n  connectLogSilent: false,\n  eventLogSilent: false,\n  maxReconnectTimes: 3,\n  reconnectTimeInterval: 30000,\n  immediateReconnectTimeInterval: 2000,\n  enableMessageCache: false,\n  message: 'message',\n  heartbeatPeriod: 50000,\n  heartbeatMessage: 'ping',\n  heartbeatLogSilent: false\n}\n\nexport class WebSocketClient {\n  static STATUS = ['CONNECTING', 'OPEN', 'CLOSING', 'CLOSED']\n\n  /**\n   * WebSocketClient constructor\n   * @param { string }  url\n   * @param { object | undefined }  options\n   */\n  constructor (url, options = {}) {\n    this.url = url\n    this.options = options\n    this.defaultOptions = { ...defaultOptions }\n    this.$options = { ...this.defaultOptions, ...options }\n    this.wasClean = null // Boolean. 是否正常断开。一般异常断开时，该值为false\n    this.reconnectTimes = 0 // 第n次重连的flag\n    this._messageCache = []\n    if (this.$options.connectImmediately) this.createWebSocket()\n    this.heartbeat = new Heartbeat(this, {\n      message: this.$options.heartbeatMessage,\n      period: this.$options.heartbeatPeriod\n    })\n    this._init()\n  }\n\n  createWebSocket () {\n    if ('WebSocket' in window) {\n      if (this.readyState === undefined || this.readyState === WebSocket.CLOSED) {\n        this.ws = new WebSocket(this.url)\n        if (this.$options.enableDefaultEventHandler) this.initEventsHandler()\n      }\n    } else {\n      console.log('WebSocket is not supported in your browser!')\n    }\n  }\n\n  reconnectWebSocket (times = 0, interval = this.$options.reconnectTimeInterval) {\n    if (times < this.$options.maxReconnectTimes) {\n      if (!this.$options.connectLogSilent) {\n        console.log(`Try to reconnect the WebSocket after ${interval / 1000} seconds.`)\n      }\n      setTimeout(\n        t => {\n          if (!this.$options.connectLogSilent) {\n            console.log(`${t + 1}th attempt to reconnect to webSocket server.`)\n          }\n          this.reconnectTimes++\n          this.createWebSocket()\n        },\n        interval,\n        times\n      )\n    } else {\n      if (!this.$options.connectLogSilent) {\n        console.error(\n          `Could not create connection to websocket server. Attempted reconnect ${this.$options.maxReconnectTimes} times. Giving up!`\n        )\n      }\n    }\n  }\n\n  initEventsHandler () {\n    this.ws.addEventListener('open', () => {\n      if (!this.$options.eventLogSilent) {\n        console.log(`The Websocket has opened at ${getTime()}.`)\n      }\n      this.wasClean = null\n      this.reconnectTimes = 0\n      this.heartbeat.recheck()\n      this.sendCachedMessage()\n    })\n    this.ws.addEventListener('message', event => {\n      this.heartbeat.recheck()\n      const data = JSON.parse(event.data)\n      if (isPlainObject(data)) {\n        const message = this.$options.message\n        const eventName = data[message]\n        eventName && typeof eventName === 'string' && this.trigger(eventName, data)\n      }\n    })\n    this.ws.addEventListener('close', event => {\n      this.wasClean = !!event.wasClean\n      if (this.wasClean) {\n        if (!this.$options.eventLogSilent) {\n          console.log(`The WebSocket connection has been closed normally at ${getTime()}.`, event)\n        }\n      } else {\n        if (!this.$options.eventLogSilent) {\n          console.error(`closed at ${getTime()}.`, event)\n        }\n        this.reconnectWebSocket(\n          this.reconnectTimes,\n          this.reconnectTimes > 0\n            ? this.$options.reconnectTimeInterval\n            : this.$options.immediateReconnectTimeInterval\n        )\n      }\n      this.heartbeat.stopCheck()\n    })\n    this.ws.addEventListener('error', error => {\n      if (!this.$options.eventLogSilent) {\n        console.error(\n          `The WebSocket connection has been closed due to an error at ${getTime()}.`,\n          error\n        )\n      }\n    })\n  }\n\n  cacheMessage (message) {\n    const index = this._messageCache.indexOf(message)\n    if (index === -1) {\n      this._messageCache.push(message)\n    }\n  }\n\n  sendCachedMessage () {\n    if (this._messageCache.length === 0) return\n    const msg = this._messageCache.shift()\n    this.send(msg)\n    setTimeout(() => {\n      this.sendCachedMessage()\n    }, 100)\n  }\n\n  /**\n   * 1. 判断当前websocket的连接状态为OPEN状态时发送消息\n   * 2. TODO: 当非OPEN状态时，判断是否为正常断开。只有当websocket为异常断开时，才存储信息\n   * 3. FIXME: 某些早期浏览器不支持readyState属性，故该方法内的逻辑应该添加相应的判断\n   * @param { object } message\n   */\n  send (message) {\n    switch (this.readyState) {\n      case undefined: {\n\n        /**\n         * WebSocket is not instantiated. Store the message to the messageCache\n         * and send it after the WebSocket open. Then invoke the createWebSocket method.\n         *\n         */\n        if (message !== this.$options.heartbeatMessage && this.$options.enableMessageCache) {\n          this.cacheMessage(message)\n        }\n        this.createWebSocket()\n        break\n      }\n      case WebSocket.CONNECTING: {\n\n        /**\n         * WebSocket is connecting. Store the message to the messageCache\n         * and send it after the WebSocket open.\n         *\n         */\n        if (message !== this.$options.heartbeatMessage && this.$options.enableMessageCache) {\n          this.cacheMessage(message)\n        }\n        break\n      }\n\n      case WebSocket.OPEN: {\n        // WebSocket is connected and send the message directly.\n        if (message === this.$options.heartbeatMessage) {\n          console.log(`Heartbeat check at ${getTime()}.`)\n          this.ws.send(JSON.stringify(message))\n          break\n        }\n\n        const index = this._messageCache.indexOf(message)\n        if (index !== -1) {\n          // 如果该msg在messageCache内，则从messageCache中删除该msg\n          this._messageCache.splice(index, 1)\n        }\n        if (\n          message instanceof Blob ||\n          message instanceof ArrayBuffer ||\n          isArrayBufferView(message)\n        ) {\n          this.ws.send(message)\n        } else {\n          this.ws.send(JSON.stringify(message))\n        }\n        break\n      }\n      default: {\n\n        /**\n         * TODO: Do not store the message if this.wasClean is true\n         * Store the message to the messageCache\n         * and send it after the WebSocket is reconnected.\n         */\n        if (message !== this.$options.heartbeatMessage && this.$options.enableMessageCache) {\n          this.cacheMessage(message)\n        }\n      }\n    }\n  }\n\n  /**\n   * TODO:\n   * It may be helpful to examine the socket's bufferedAmount attribute before attempting to\n   * close the connection to determine if any data has yet to be transmitted on the network.\n   * If this value isn't 0, there's pending data still, so you may wish to wait before closing the connection.\n   */\n  close (...args) {\n    this.ws?.close(...args)\n  }\n\n  _init () {\n    Object.defineProperties(this, {\n      readyState: {\n        enumerable: true,\n        get: function () {\n          return this.ws?.readyState\n        }\n      },\n      status: {\n        enumerable: true,\n        get: function () {\n          return this.readyState >= 0 ? this.constructor.STATUS[this.readyState] : 'UNCREATE'\n        }\n      },\n      onopen: {\n        enumerable: true,\n        get: function () {\n          return this.ws?.onopen\n        },\n        set: function (fn) {\n          this.ws && (this.ws.onopen = fn)\n        }\n      },\n      onmessage: {\n        enumerable: true,\n        get: function () {\n          return this.ws?.onmessage\n        },\n        set: function (fn) {\n          this.ws && (this.ws.onmessage = fn)\n        }\n      },\n      onclose: {\n        enumerable: true,\n        get: function () {\n          return this.ws?.onclose\n        },\n        set: function (fn) {\n          this.ws && (this.ws.onclose = fn)\n        }\n      },\n      onerror: {\n        enumerable: true,\n        get: function () {\n          return this.ws?.onerror\n        },\n        set: function (fn) {\n          this.ws && (this.ws.onerror = fn)\n        }\n      }\n    })\n  }\n\n  on (event, func) {\n    if (!this._events) this._events = Object.create(null)\n    if (Array.isArray(event)) {\n      for (let i = 0, l = event.length; i < l; i++) {\n        this.on(event[i], func)\n      }\n    } else {\n      ;(this._events[event] || (this._events[event] = [])).push(func)\n    }\n    return this\n  }\n\n  once (event, func) {\n    const $this = this\n\n    function once () {\n      $this.off(event, once)\n      func.apply($this, arguments)\n    }\n\n    once.func = func\n    this.on(event, once)\n    return this\n  }\n\n  off (event, func) {\n    // all\n    if (!arguments.length) {\n      this._events = Object.create(null)\n      return this\n    }\n    // array of events\n    if (Array.isArray(event)) {\n      for (let i = 0, l = event.length; i < l; i++) {\n        this.off(event[i], func)\n      }\n      return this\n    }\n    // specific event\n    const cbs = this._events[event]\n    if (!cbs) {\n      return this\n    }\n    if (!func) {\n      this._events[event] = null\n      return this\n    }\n    // specific handler\n    let cb\n    let i = cbs.length\n    while (i--) {\n      cb = cbs[i]\n      if (cb === func || cb.func === func) {\n        cbs.splice(i, 1)\n        break\n      }\n    }\n    return this\n  }\n\n  trigger (event, ...args) {\n    let cbs = this._events[event]\n    if (cbs) {\n      cbs = [...cbs]\n      let res\n      for (let i = 0, l = cbs.length; i < l; i++) {\n        try {\n          res = cbs[i].apply(this, args)\n          if (res && isPromise(res) && !res._handled) {\n            res.catch(e => console.error(e))\n            res._handled = true\n          }\n        } catch (e) {\n          console.error(e)\n        }\n      }\n    }\n    return this\n  }\n}\n\nexport { Heartbeat }\nexport { EventHub } from './util'\nexport default WebSocketClient\n"],"file":"index.js"}